*, *::before, *::after {
    padding: 0;
    margin: 0 auto;
    box-sizing: border-box;
}

body {
  background-color: #000;
  min-height: 100vh;
  display: grid;
  place-items: center;
  perspective: 1200px;
  overflow: hidden;
  
  *:not(:empty) {
    transform-style: preserve-3d;
  }
}

$duration: 2s;

.scene {
  position: relative;
  animation: rotate 90s infinite linear;
  
  @keyframes rotate {
    from { transform: rotateX(60deg) rotateZ(-210deg); }
    to { transform: rotateX(60deg) rotateZ(150deg); }
  }
}

.floor {
  position: absolute;
  inset: -40em;
  background-image:
    radial-gradient(circle, transparent, #000 40em),
    repeating-conic-gradient(#567 0 35deg, #678 0 55deg, #789 0 90deg);
  background-size: 100% 100%, 4.5em 4.5em;
  transform: translateZ(-2px);
  animation: floorPos $duration*0.75 infinite linear;
  
  @keyframes floorPos {
    to { background-position-x: center, -4.5em; }
  }
}

.links {
  position: absolute;
  display: flex;
  gap: 0.5em;
  transform: translateX(-50%);
}

.link {
  width: 3em; height: 2em;
  animation: cubeX $duration var(--delay, 0s) infinite ease-in-out;
  
  & > div {
    position: absolute;
    inset: 0;
    animation: cubeZ $duration var(--delay, 0s) infinite ease-in-out;
    
    & > div {
      position: absolute;
      inset: 0;
      background-color: #789;
      box-shadow: 0 0 1em #0008 inset;
      transform-style: preserve-3d;
      animation: cubeR $duration var(--delay, 0s) infinite ease-in-out;
      
      &::before, &::after {
        content: '';
        position: absolute;
        inset: 0;
        box-shadow: 0 0 1em #0008 inset;
      }
      
      &::before {
        background-image: linear-gradient(#789, #def);
        transform: rotatex(60deg);
        transform-origin: top;
      }
      
      &::after {
        background-image: linear-gradient(#def, #789);
        transform: rotatex(-60deg);
        transform-origin: bottom;
      }
    }
  }
  
  @keyframes cubeZ {
    0%, 50%, 100% { transform: translateZ(0em); }
    25% { transform: translateZ(6em); }
  }
  
  @keyframes cubeX {
    0%, 100% { transform: translateX(0em); }
    50% { transform: translateX(3em); animation-timing-function: linear; }
  }
  
  @keyframes cubeR {
    0%, 50%, 100% { transform: rotateY(0deg); }
    12.5% { transform: rotateY(45deg); }
    37.5% { transform: rotateY(-45deg); }
  }
  
  @for $i from 0 to 9 {
    &:nth-child(#{$i + 1}) {
      --delay: #{$duration / 15 * $i - $duration}
    }
  }
  
  &::after {
    content: '';
    position: absolute;
    inset: 0;
    background-color: #000;
    filter: blur(0.75em);
    transform: scale(1.1) translateZ(-1px);
    animation: shadowOpacity $duration var(--delay, 0s) infinite ease-in-out;
    
    @keyframes shadowOpacity {
      0%, 50%, 100% { opacity: 0.8; transform: scale(1.1) translateZ(-1px); }
      25% { opacity: 0.2; transform: scale(2) translateZ(-1px); }
    }
  }
}